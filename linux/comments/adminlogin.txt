import React, { useState } from 'react';
import { TextField, Button, Box, Grid, Typography, Paper } from '@mui/material';
import { useNavigate } from 'react-router-dom';

const AdminLogin = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [errorMessages, setErrorMessages] = useState({ email: '', password: '' });
  const navigate = useNavigate();

  const handleLogin = () => {
    setErrorMessages({ email: '', password: '' });

    let valid = true;
    if (!email) {
      setErrorMessages((prev) => ({ ...prev, email: 'Email field is required.' }));
      valid = false;
    } else if (!/\S+@\S+\.\S+/.test(email)) {
      setErrorMessages((prev) => ({ ...prev, email: 'Email format is invalid.' }));
      valid = false;
    }

    if (!password) {
      setErrorMessages((prev) => ({ ...prev, password: 'Password field is required.' }));
      valid = false;
    } else if (password.length < 8) {
      setErrorMessages((prev) => ({ ...prev, password: 'Password must be at least 8 characters long.' }));
      valid = false;
    }

    if (valid) {
      if (email === 'sornaa@gmail.com' && password === 'sornaa@123') {
        console.log('Login Successful:', { email, password });
        navigate('/admindashboard');
      } else {
        setErrorMessages((prev) => ({ ...prev, email: 'Invalid email or password.' }));
      }
    }
  };

  return (
    <Grid
      container
      spacing={2}
      alignItems="center"
      justifyContent="center"
      sx={{
        height: '100vh',
        background: 'linear-gradient(135deg, #f3e5f5 30%, #e1f5fe 90%)',
        padding: 2,
      }}
    >
      <Grid item xs={12} sm={6} md={4}>
        <Box
          component="img"
          src="https://www.shutterstock.com/image-photo/access-system-login-by-username-600nw-2230192833.jpg"
          alt="Login Illustration"
          sx={{
            width: '100%',
            height: 'auto',
            borderRadius: 2,
            boxShadow: 3,
          }}
        />
      </Grid>
      <Grid item xs={12} sm={6} md={4}>
        <Paper
          elevation={4}
          sx={{
            padding: 3,
            borderRadius: 2,
            backgroundColor: 'white',
          }}
        >
          <Box
            sx={{
              display: 'flex',
              flexDirection: 'column',
              gap: 2,
              width: '100%',
            }}
          >
            <Typography variant="h5" align="center" gutterBottom>
              Admin Login
            </Typography>
            <TextField
              label="Email"
              variant="outlined"
              fullWidth
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              error={!!errorMessages.email}
              helperText={errorMessages.email}
            />
            <TextField
              label="Password"
              variant="outlined"
              type="password"
              fullWidth
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              error={!!errorMessages.password}
              helperText={errorMessages.password}
            />
            <Button
              variant="contained"
              color="primary"
              fullWidth
              onClick={handleLogin}
              sx={{
                backgroundColor: '#1976d2',
                '&:hover': {
                  backgroundColor: '#1565c0',
                },
              }}
            >
              Login
            </Button>
          </Box>
        </Paper>
      </Grid>
    </Grid>
  );
};

export default AdminLogin;




import React, { useState } from 'react';
import { TextField, Button, Box } from '@mui/material';
import { useNavigate } from 'react-router-dom'; // Import useNavigate

const AdminLogin = () => {
  // Set the initial values to the provided email and password
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [errorMessages, setErrorMessages] = useState({ email: '', password: '' });
  const navigate = useNavigate(); // Initialize useNavigate

  const handleLogin = () => {
    // Reset error messages
    setErrorMessages({ email: '', password: '' });

    // Validation
    let valid = true;
    if (!email) {
      setErrorMessages((prev) => ({ ...prev, email: 'Email field is required.' }));
      valid = false;
    } else if (!/\S+@\S+\.\S+/.test(email)) {
      setErrorMessages((prev) => ({ ...prev, email: 'Email format is invalid.' }));
      valid = false;
    }

    if (!password) {
      setErrorMessages((prev) => ({ ...prev, password: 'Password field is required.' }));
      valid = false;
    } else if (password.length < 8) {
      setErrorMessages((prev) => ({ ...prev, password: 'Password must be at least 8 characters long.' }));
      valid = false;
    }

    // Check for valid credentials
    if (valid) {
      if (email === 'sornaa@gmail.com' && password === 'sornaa@123') {
        // Handle successful login and navigate to Admindashboard
        console.log('Login Successful:', { email, password });
        navigate('/admindashboard'); // Navigate to Admindashboard
        // Implement further login logic here (e.g., API call)
      } else {
        // Set error message for invalid credentials
        setErrorMessages((prev) => ({ ...prev, email: 'Invalid email or password.' }));
      }
    }
  };

  return (
    
    <Box
      sx={{
        display: 'flex',
        flexDirection: 'column',
        gap: 2,
        padding: 2,
        width: '100%',
        maxWidth: 400, // Adjust max width as needed
      }}
    >
      <TextField
        label="Email"
        variant="outlined"
        fullWidth
        type="email"
        value={email}
        onChange={(e) => setEmail(e.target.value)}
        error={!!errorMessages.email}
        helperText={errorMessages.email}
      />
      <TextField
        label="Password"
        variant="outlined"
        type="password"
        fullWidth
        value={password}
        onChange={(e) => setPassword(e.target.value)}
        error={!!errorMessages.password}
        helperText={errorMessages.password}
      />
      <Button variant="contained" color="primary" fullWidth onClick={handleLogin}>
        Login
      </Button>
    </Box>
  );
};

export default AdminLogin;

